import { describe, expect, it } from 'vitest';

import { convertNumber } from '../../src/number/convert.ts';

describe('convert number', () => {
  it.each([
    ['acre', 'square-foot', 43_560],
    ['arc-minute', 'degree', 0.016_666_666_666_666_666],
    ['arc-second', 'arc-minute', 0.016_666_666_666_666_666],
    ['byte', 'bit', 8],
    ['gigabit', 'megabit', 1000],
    ['gigabyte', 'megabyte', 1024],
    ['hectare', 'square-meter', 10_000],
    ['kilobit', 'bit', 1000],
    ['kilobyte', 'byte', 1024],
    ['liter-per-100-kilometer', 'liter-per-kilometer', 0.01],
    ['megabit', 'kilobit', 1000],
    ['megabyte', 'kilobyte', 1024],
    ['radian', 'revolution', 0.159_154_943_091_895_35],
    ['revolution', 'degree', 360],
    ['square-centimeter', 'square-meter', 0.0001],
    ['square-centimeter', 'square-inch', 0.155_000_310_000_62],
    ['square-foot', 'square-inch', 144],
    ['square-kilometer', 'square-meter', 1_000_000],
    ['square-mile', 'square-meter', 2_589_988.110_336],
    ['square-mile', 'square-yard', 3_097_600],
    ['square-mile', 'square-foot', 27_878_400],
    ['square-yard', 'square-foot', 9],
    ['terabit', 'gigabit', 1000],
    ['terabyte', 'gigabyte', 1024],
    ['terabitDecimal', 'gigabitDecimal', 1000],
    ['gigabitDecimal', 'megabitDecimal', 1000],
    ['megabitDecimal', 'kilobitDecimal', 1000],
    ['kilobitDecimal', 'bitDecimal', 1000],
    ['byteDecimal', 'bitDecimal', 8],
    ['terabyteDecimal', 'gigabyteDecimal', 1000],
    ['gigabyteDecimal', 'megabyteDecimal', 1000],
    ['megabyteDecimal', 'kilobyteDecimal', 1000],
    ['kilobyteDecimal', 'byteDecimal', 1000],
    ['century', 'second', 315_569_520],
    ['year', 'month', 12],
    ['year', 'second', 31_556_952],
    ['month', 'day', 30.436_875],
    ['week', 'day', 7],
    ['day', 'hour', 24],
    ['hour', 'minute', 60],
    ['minute', 'second', 60],
    ['second', 'millisecond', 1000],
    ['millisecond', 'microsecond', 1000],
    ['microsecond', 'nanosecond', 1000],
    ['ampere', 'milliampere', 1000],
    ['kilojoule', 'joule', 1000],
    ['kilowatt-hour', 'joule', 3_600_000],
    ['calorie', 'joule', 4.1868],
    ['foodcalorie', 'joule', 523 / 125],
    ['kilocalorie', 'calorie', 1000],
    ['pound-force', 'newton', 4.448_222],
    ['gigahertz', 'megahertz', 1000],
    ['megahertz', 'kilohertz', 1000],
    ['kilohertz', 'hertz', 1000],
    ['dot-per-inch', 'pixel-per-inch', 1],
    ['dot-per-centimeter', 'dot-per-inch', 2.54],
    ['megapixel', 'pixel', 1_000_000],
    ['kilometer', 'centimeter', 100_000],
    ['meter', 'centimeter', 100],
    ['decimeter', 'centimeter', 10],
    ['millimeter', 'centimeter', 1 / 10],
    ['micrometer', 'centimeter', 1 / 10_000],
    ['nanometer', 'centimeter', 1 / 10_000_000],
    ['picometer', 'centimeter', 1 / 10_000_000_000],
    ['mile', 'foot', 5280],
    ['yard', 'inch', 36],
    ['foot', 'inch', 12],
    ['inch', 'centimeter', 2.54],
    ['light-year', 'meter', 9_460_730_472_580_800],
    ['astronomical-unit', 'meter', 149_597_870_700],
    ['parsec', 'astronomical-unit', 648_000 / Math.PI],
    ['furlong', 'yard', 220],
    ['fathom', 'foot', 6],
    ['nautical-mile', 'meter', 1852],
    ['mile-scandinavian', 'meter', 10_000],
    ['point', 'inch', 1 / 72],
    ['tonne', 'kilogram', 1000],
    ['gram', 'kilogram', 1 / 1000],
    ['milligram', 'gram', 1 / 1000],
    ['microgram', 'milligram', 1 / 1000],
    ['carat', 'milligram', 200],
    ['pound', 'kilogram', 45_359_237 / 100_000_000],
    ['ton', 'pound', 2000],
    ['stone', 'pound', 14],
    ['ounce', 'pound', 1 / 16],
    ['ounce-troy', 'pound', 12 / 175],
    ['gigawatt', 'megawatt', 1000],
    ['megawatt', 'kilowatt', 1000],
    ['kilowatt', 'watt', 1000],
    ['horsepower', 'watt', 745.699_871_582_27],
    ['hectopascal', 'millibar', 1],
    [
      'hectopascal',
      'pound-force-per-square-inch',
      129_032_000_000 / 8_896_443_230_521,
    ],
    ['inch-ofhg', 'hectopascal', 33.863_89],
    ['millimeter-ofhg', 'hectopascal', 1013.25 / 760],
    ['kilometer-per-hour', 'meter-per-second', 5 / 18],
    ['mile-per-hour', 'meter-per-second', 1397 / 3125],
    ['knot', 'meter-per-second', 463 / 900],
    ['pound-force-foot', 'newton-meter', 1.355_82],
    ['cubic-kilometer', 'cubic-meter', 1_000_000_000],
    ['cubic-meter', 'cubic-centimeter', 1_000_000_000],
    ['cubic-centimeter', 'cubic-inch', 0.061_023_744_094_73],
    ['liter', 'cubic-centimeter', 1000],
    ['megaliter', 'liter', 1_000_000],
    ['hectoliter', 'liter', 100],
    ['deciliter', 'liter', 1 / 10],
    ['centiliter', 'liter', 1 / 100],
    ['milliliter', 'liter', 1 / 1000],
    ['cup-metric', 'liter', 1 / 4],
    ['cubic-mile', 'cubic-yard', 5_451_776_000],
    ['cubic-yard', 'cubic-foot', 27],
    ['cubic-foot', 'cubic-meter', 0.028_316_846_592],
    ['cubic-foot', 'liter', 28.316_846_592],
    ['cubic-inch', 'cubic-foot', 1 / 1728],
    ['acre-foot', 'cubic-foot', 43_560],
    ['pint-metric', 'milliliter', 500],
    ['tablespoon', 'fluid-ounce', 1 / 2],
    ['teaspoon', 'fluid-ounce', 1 / 6],
    ['gallon-US', 'liter', 3.785_411_784],
    ['gallon-imperial-US', 'liter', 4.546_09],
    ['bushel-US', 'cubic-inch', 2150.42],
    ['gallon-US', 'cubic-inch', 231],
    ['fluid-ounce-US', 'gallon', 1 / 128],
    ['quart-US', 'gallon', 1 / 4],
    ['pint-US', 'gallon', 1 / 8],
    ['cup-US', 'fluid-ounce', 8],
    ['gallon-UK', 'liter', 4.546_09],
    ['gallon-imperial-UK', 'liter', 4.546_09],
    ['bushel-UK', 'gallon-imperial', 8],
    ['fluid-ounce-UK', 'gallon-imperial', 1 / 160],
    ['quart-UK', 'gallon-imperial', 1 / 4],
    ['pint-UK', 'gallon-imperial', 1 / 8],
    ['cup-UK', 'milliliter', 284.1],
  ])('should convert from %s to %s to get %s', (from, to, result) => {
    // @ts-expect-error allow for test
    const value = convertNumber(1, from, to);
    expect(value).toBe(result);
  });
});
